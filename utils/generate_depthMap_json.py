import json
import numpy as np
import os
from pathlib import Path


def save_depth_params(depth_map, camera_intrinsics, output_dir):
    """Save depth map and camera parameters to a JSON file compatible with COLMAP format.
    Args:
        depth_map (numpy.ndarray): The depth map generated by MiDaS.
        camera_intrinsics (dict): A dictionary containing the camera's intrinsic parameters.
        output_dir (str or Path): The directory where the depth_params.json file will be saved."""
    # Ensure the output directory exists
    output_dir = Path(output_dir)
    output_dir.mkdir(parents=True, exist_ok=True)
    # Define COLMAP-style depth parameters
    depth_params = {
        "depth_map": depth_map.tolist(),  # Convert numpy array to list for JSON compatibility
        "camera": {
            "fx": camera_intrinsics["fx"],  # Focal length in x direction
            "fy": camera_intrinsics["fy"],  # Focal length in y direction
            "cx": camera_intrinsics["cx"],  # Principal point in x direction
            "cy": camera_intrinsics["cy"],  # Principal point in y direction
            "width": camera_intrinsics["width"],  # Image width
            "height": camera_intrinsics["height"],  # Image height
        },
        "depth_scale": 1.0}
    # Define the output file path
    depth_params_path = output_dir / "depth_params.json"
    # Save to JSON
    with open(depth_params_path, 'w') as json_file:
        json.dump(depth_params, json_file, indent=4)
    print(f"Depth parameters saved to: {depth_params_path}")


# Example usage
if __name__ == "__main__":
    # Example MiDaS depth map (should be generated by MiDaS model)
    depth_map = np.random.rand(480, 640)  # Replace with actual MiDaS depth map

    # Example camera intrinsics (for a given camera)
    camera_intrinsics = {
        "fx": 800,  # Example focal length in x
        "fy": 800,  # Example focal length in y
        "cx": 320,  # Principal point in x
        "cy": 240,  # Principal point in y
        "width": 640,  # Image width
        "height": 480  # Image height
    }

    # Define the output directory (same as COLMAP's directory)
    output_dir = "colmap_output"  # Replace with the actual COLMAP output folder path

    # Save depth parameters
    save_depth_params(depth_map, camera_intrinsics, output_dir)
